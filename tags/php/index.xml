<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Php on yutaf blog</title>
    <link>http://localhost:1313/tags/php/</link>
    <description>Recent content in Php on yutaf blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Copyright Yuta Fujishiro</copyright>
    <lastBuildDate>Fri, 20 Jul 2018 13:09:20 +0900</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/php/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>composer update is slow</title>
      <link>http://localhost:1313/composer-update-is-slow/</link>
      <pubDate>Fri, 20 Jul 2018 13:09:20 +0900</pubDate>
      <guid>http://localhost:1313/composer-update-is-slow/</guid>
      <description>TL;DR Executing compser update &amp;lt;package name&amp;gt; on Vagrant is so slow. Execute it on your local machine directly compser update seems comsuming a lot of computer resources like CPU or Memory. compser update &amp;lt;package name&amp;gt; is so slow when I execute it on Vagrant.&#xA;This is caused because Vangrant has the limited computer resources like CPU or Memory.&#xA;And compser update seems comsuming a lot of computer resources.&#xA;https://github.com/composer/composer/issues/1805&#xA;A workaround for this is executing it on your local machine directly, not on Vagrant.</description>
    </item>
    <item>
      <title>phpbrew note2</title>
      <link>http://localhost:1313/phpbrew-note2/</link>
      <pubDate>Fri, 20 Jul 2018 13:09:19 +0900</pubDate>
      <guid>http://localhost:1313/phpbrew-note2/</guid>
      <description>This is a note for building php by phpbrew on Mac.&#xA;Restore icu4c to the old version to build php $ cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula $ git checkout ab72fee8166749231036a4476aaba30df9619800 icu4c.rb $ brew unlink icu4c $ HOMEBREW_NO_AUTO_UPDATE=1 brew reinstall icu4c References;&#xA;https://qiita.com/sizuhiko/items/aebdbb05f0824cae4bdd&#xA;https://github.com/php-build/php-build/pull/463&#xA;https://qiita.com/KyoheiG3/items/912bcc27462871487845&#xA;Install other dependencies to build php $ brew install \ libxml2 \ jpeg \ gd \ mcrypt Setting up Configuration for phpbrew&#xA;~/local/etc/phpbrew.yaml variants: dev: mbstring: intl: icu: gettext: pcre: readline: xml: soap: mysql: my-without-pdo-sqlite: - --without-pdo-sqlite my-without-sqlite3: - --without-sqlite3 zlib: openssl: mcrypt: bcmath: curl: zip: my-disable-cgi: - --disable-cgi calendar: my-disable-short-tags: - --disable-short-tags $ phpbrew init -c ~/local/etc/phpbrew.</description>
    </item>
    <item>
      <title>Aes encryption in android, decryption in php</title>
      <link>http://localhost:1313/aes-encryption-in-android-decryption-in-php/</link>
      <pubDate>Tue, 13 Mar 2018 10:44:36 +0900</pubDate>
      <guid>http://localhost:1313/aes-encryption-in-android-decryption-in-php/</guid>
      <description>Notes PHP Mcrypt is deprecated as of PHP 7.1.0, removed as of PHP 7.2.0 http://php.net/manual/en/intro.mcrypt.php I could not decrypt in alternative way(openssl_decrypt) instead of Mcrypt. References https://developer.android.com/reference/android/util/Base64.html#URL_SAFE https://github.com/stevenholder/PHP-Java-AES-Encrypt class Encryption { ... /** * Decrypt AES encrypted data by Android * * @param $sStr * @param $sKey * @return bool|string */ public static function decryptAesAndroid($sStr, $sKey) { // Replace strings escaped by Android&amp;#39;s Base64.URL_SAFE // https://developer.android.com/reference/android/util/Base64.html#URL_SAFE $sStr = str_replace(array(&amp;#39;-&amp;#39;, &amp;#39;_&amp;#39;), array(&amp;#39;+&amp;#39;, &amp;#39;/&amp;#39;), $sStr); // Borrowed from https://github.</description>
    </item>
    <item>
      <title>Xdebug remote cli debugging with vagrant and PhpStorm</title>
      <link>http://localhost:1313/xdebug-remote-cli-debugging-with-vagrant-and-phpstorm/</link>
      <pubDate>Wed, 17 May 2017 12:19:16 +0900</pubDate>
      <guid>http://localhost:1313/xdebug-remote-cli-debugging-with-vagrant-and-phpstorm/</guid>
      <description>There are three points to set xdebug&amp;rsquo;s remote cli debugging correctly.&#xA;php.ini for cli PHP_IDE_CONFIG environment variable Phpstorm setting php.ini for cli xdebug.remote_host means the host where phpstorm runs.(= client)&#xA;You should specify the host ip from the guest machine, vagrant.&#xA;You can use 10.0.2.2 as it.&#xA;zend_extension = /usr/lib/php5/20100525/xdebug.so xdebug.remote_enable = on xdebug.remote_autostart = 1 xdebug.remote_host = 10.0.2.2 xdebug.remote_port=9000 xdebug.remote_handler = dbgp xdebug.var_display_max_depth = -1 xdebug.var_display_max_children = -1 xdebug.var_display_max_data = -1 xdebug.</description>
    </item>
    <item>
      <title>Create tsv file with league csv</title>
      <link>http://localhost:1313/create_tsv_file_with_league_csv/</link>
      <pubDate>Tue, 06 Sep 2016 14:42:34 +0900</pubDate>
      <guid>http://localhost:1313/create_tsv_file_with_league_csv/</guid>
      <description>tsv = tab-separated values.&#xA;https://en.wikipedia.org/wiki/Tab-separated_values&#xA;It&amp;rsquo;s super easy to create tsv file with league/csv.&#xA;http://csv.thephpleague.com/&#xA;Install $ composer require league/csv php&#xA;use League\Csv\Writer; $tsv_list =[ [1, 2, 3], [&amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39;, &amp;#39;baz&amp;#39;], ]; $writer = Writer::createFromFileObject(new SplTempFileObject()); $writer-&amp;gt;setDelimiter(&amp;#34;\t&amp;#34;); $writer-&amp;gt;insertAll($tsv_list); file_put_contents(&amp;#34;/path/to/data.tsv&amp;#34;, $writer-&amp;gt;__toString()); The point is setDelimiter method.</description>
    </item>
    <item>
      <title>Translate csrf validation message in symfony form component</title>
      <link>http://localhost:1313/translate-csrf-validation-message-in-symfony-form-component/</link>
      <pubDate>Fri, 24 Jun 2016 13:33:48 +0900</pubDate>
      <guid>http://localhost:1313/translate-csrf-validation-message-in-symfony-form-component/</guid>
      <description>I was stuck for a while.&#xA;You need to pass translator instance(also domain as needed) as an argument when you instantiate CsrfExtension.&#xA;php&#xA;use Symfony\Component\Form\Extension\Csrf\CsrfExtension; use Symfony\Component\Form\Forms; ... $csrfExtension = new CsrfExtension($csrfTokenManager, $translator, &amp;#39;validators&amp;#39;); $formFactory = Forms::createFormFactoryBuilder() -&amp;gt;addExtensions([$csrfExtension]) -&amp;gt;getFormFactory(); ... I wrote about internationalization of symfony validation component in older post,&#xA;however it seems each form extensions should be passed the Translator instance individually.&#xA;use Symfony\Component\Form\Extension\Csrf\CsrfExtension; use Symfony\Component\Form\Extension\Validator\ValidatorExtension; use Symfony\Component\Form\Forms; use Symfony\Component\Security\Csrf\CsrfTokenManager; use Symfony\Component\Translation\Translator; use Symfony\Component\Validator\Validation; .</description>
    </item>
    <item>
      <title>Password confirmation form with symfony</title>
      <link>http://localhost:1313/password-confirmation-form-with-symfony/</link>
      <pubDate>Fri, 24 Jun 2016 11:16:11 +0900</pubDate>
      <guid>http://localhost:1313/password-confirmation-form-with-symfony/</guid>
      <description>I was so impressed it goes very easy.&#xA;RepeatedType Field helps us to create password &amp;amp; password confirmation fields.&#xA;http://symfony.com/doc/current/reference/forms/types/repeated.html&#xA;php&#xA;... $validator = Validation::createValidatorBuilder() -&amp;gt;setTranslator($translator) -&amp;gt;setTranslationDomain(&amp;#39;validators&amp;#39;) -&amp;gt;getValidator(); $formFactory = Forms::createFormFactoryBuilder() -&amp;gt;addExtensions([new ValidatorExtension($validator)]) -&amp;gt;getFormFactory(); $form = $formFactory-&amp;gt;get()-&amp;gt;createBuilder() -&amp;gt;add(&amp;#39;email&amp;#39;, TextType::class, array( &amp;#39;constraints&amp;#39; =&amp;gt; array( new NotBlank(), new Length(array(&amp;#39;min&amp;#39; =&amp;gt; 4)), ), )) -&amp;gt;add(&amp;#39;password&amp;#39;, RepeatedType::class, array( &amp;#39;type&amp;#39; =&amp;gt; PasswordType::class, &amp;#39;required&amp;#39; =&amp;gt; true, &amp;#39;constraints&amp;#39; =&amp;gt; array( new NotBlank(), new Length(array(&amp;#39;min&amp;#39; =&amp;gt; 6)), ), &amp;#39;first_options&amp;#39; =&amp;gt; array(&amp;#39;label&amp;#39; =&amp;gt; &amp;#39;label.</description>
    </item>
    <item>
      <title>Internationalize symfony validation component outside of symfony framework</title>
      <link>http://localhost:1313/internationalize-symfony-validation-component-outside-of-symfony-framework/</link>
      <pubDate>Sun, 19 Jun 2016 13:35:28 +0900</pubDate>
      <guid>http://localhost:1313/internationalize-symfony-validation-component-outside-of-symfony-framework/</guid>
      <description>It took me several hours to make it, Symfony validation component Internationalization.&#xA;The point is instantiation of translator and validator.&#xA;composer.json&#xA;{ &amp;#34;require&amp;#34; : { &amp;#34;twig/twig&amp;#34;: &amp;#34;~1.0&amp;#34;, &amp;#34;symfony/translation&amp;#34;: &amp;#34;^3.1&amp;#34;, &amp;#34;symfony/twig-bridge&amp;#34;: &amp;#34;^3.1&amp;#34;, &amp;#34;symfony/config&amp;#34;: &amp;#34;^3.1&amp;#34;, &amp;#34;symfony/form&amp;#34;: &amp;#34;^3.1&amp;#34;, &amp;#34;symfony/validator&amp;#34;: &amp;#34;^3.1&amp;#34;, }, } php&#xA;use Symfony\Component\Translation\Translator; use Symfony\Component\Translation\MessageSelector; use Symfony\Component\Translation\Loader\XliffFileLoader use Symfony\Component\Validator\Validation; use Symfony\Component\Form\Extension\Validator\ValidatorExtension; $translator = new Translator($locale, new MessageSelector()); $vendorDir = realpath(__DIR__.&amp;#39;/../vendor&amp;#39;); $vendorFormDir = $vendorDir.&amp;#39;/symfony/form&amp;#39;; $vendorValidatorDir = $vendorDir.&amp;#39;/symfony/validator&amp;#39;; $translator-&amp;gt;addLoader(&amp;#39;xlf&amp;#39;, new XliffFileLoader()); // there are built-in translations for the core error messages $translator-&amp;gt;addResource(&amp;#39;xlf&amp;#39;, $vendorFormDir.</description>
    </item>
    <item>
      <title>php i18n with twig and symfony translation component outside of symfony framework</title>
      <link>http://localhost:1313/php-i18n-with-twig-and-symfony-translation-component-outside-of-symfony-framework/</link>
      <pubDate>Sun, 05 Jun 2016 14:47:30 +0900</pubDate>
      <guid>http://localhost:1313/php-i18n-with-twig-and-symfony-translation-component-outside-of-symfony-framework/</guid>
      <description>composer.json&#xA;{ &amp;#34;require&amp;#34; : { &amp;#34;twig/twig&amp;#34;: &amp;#34;~1.0&amp;#34;, &amp;#34;symfony/translation&amp;#34;: &amp;#34;^3.1&amp;#34;, &amp;#34;symfony/twig-bridge&amp;#34;: &amp;#34;^3.1&amp;#34;, &amp;#34;symfony/config&amp;#34;: &amp;#34;^3.1&amp;#34;, &amp;#34;symfony/yaml&amp;#34;: &amp;#34;^3.1&amp;#34; }, } php&#xA;$loader = new Twig_Loader_Filesystem(__DIR__.&amp;#39;/../templates&amp;#39;); $twig = new Twig_Environment($loader); $locale = &amp;#39;en&amp;#39;; if(isset($_SERVER[&amp;#39;HTTP_ACCEPT_LANGUAGE&amp;#39;]) &amp;amp;&amp;amp; strlen($_SERVER[&amp;#39;HTTP_ACCEPT_LANGUAGE&amp;#39;])&amp;gt;0) { $locale = substr($_SERVER[&amp;#39;HTTP_ACCEPT_LANGUAGE&amp;#39;], 0, 2); } $translator = new Symfony\Component\Translation\Translator($locale, new \Symfony\Component\Translation\MessageSelector()); $translator-&amp;gt;setFallbackLocales([&amp;#39;en&amp;#39;]); $translator-&amp;gt;addLoader(&amp;#39;yaml&amp;#39;, new Symfony\Component\Translation\Loader\YamlFileLoader()); $translator-&amp;gt;addResource(&amp;#39;yaml&amp;#39;, __DIR__.&amp;#39;/../locales/en.yml&amp;#39;, &amp;#39;en&amp;#39;); $translator-&amp;gt;addResource(&amp;#39;yaml&amp;#39;, __DIR__.&amp;#39;/../locales/ja.yml&amp;#39;, &amp;#39;ja&amp;#39;); $twig-&amp;gt;addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension($translator)); $data = [&amp;#39;somethig&amp;#39; =&amp;gt; &amp;#39;abcd&amp;#39;]; $twig-&amp;gt;render(&amp;#34;hello.html&amp;#34;, $data); yml&#xA;foo: FOO html&#xA;&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p&amp;gt;{{ &amp;#39;foo&amp;#39;|trans }}&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; output</description>
    </item>
    <item>
      <title>php max_input_vars makes you lose form values</title>
      <link>http://localhost:1313/php-max-input-vars/</link>
      <pubDate>Tue, 19 May 2015 14:55:52 +0900</pubDate>
      <guid>http://localhost:1313/php-max-input-vars/</guid>
      <description>ie(11) でのみ form で送られるべき値が送られてこないということが起きた。&#xA;最初は js のバグかと思っていたが、php の設定が問題だった。&#xA;【php】max_input_varsの影響でフォームの値を全部受け取れないことがある at softelメモ&#xA;問題 フォームから送信した値が、サーバー側（php）で取得できない。 プログラムは動いてるみたいなんだけど、あるはずの $_REQUEST[‘hoge’] などがないみたい。 どうなってるのこれ？ 答え 以下の条件に当てはまるようなら、phpのmax_input_varsの設定値の影響かもしれない。 ... max_input_vars integer 入力変数を最大で何個まで受け付けるかを指定します (この制限は、スーパーグローバル $_GET、$_POST そして $_COOKIE にそれぞれ個別に適用されます)。 対象サーバーの max_input_vars は 150 だったので、300 まで上げた。&#xA;解決した。&#xA;それにしても ie(11) だけで起こった理由がわからない。&#xA;他のブラウザよりも多くのフォーム値を送信しているということ？&#xA;同じ実装ではないが、次のような記事を見つけた。&#xA;inputタグのonclickでform.submit()を実行しているため、IEだけ二重にリクエストが送信される時の対処法&#xA;この対処法は自分の場合は有効でなかった。&#xA;とりあえず、max_input_vars の値には気をつける。</description>
    </item>
    <item>
      <title>第89回 PHP勉強会＠東京</title>
      <link>http://localhost:1313/php-study-89/</link>
      <pubDate>Thu, 30 Apr 2015 18:14:33 +0900</pubDate>
      <guid>http://localhost:1313/php-study-89/</guid>
      <description>&lt;p&gt;先日、&lt;a href=&#34;http://localhost:1313/i-made-a-deployment-tool-ryogoku/&#34;&gt;デプロイツールを作成したという記事&lt;/a&gt;を投稿したが、&lt;a href=&#34;https://phpstudy.doorkeeper.jp/events/23826&#34;&gt;第89回 PHP勉強会＠東京&lt;/a&gt; でそれについての発表を行った。&lt;/p&gt;</description>
    </item>
    <item>
      <title>phpbrew note</title>
      <link>http://localhost:1313/phpbrew-note/</link>
      <pubDate>Tue, 17 Feb 2015 12:32:23 +0900</pubDate>
      <guid>http://localhost:1313/phpbrew-note/</guid>
      <description>&lt;p&gt;ローカル開発環境に phpenv + php-build を使っていたが、&lt;a href=&#34;https://github.com/phpbrew/phpbrew&#34;&gt;phpbrew&lt;/a&gt; のほうが簡単そうだったので移行した。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
